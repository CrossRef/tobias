* MongoDB

  $ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
  $ sudo echo "deb
  http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist
      10gen"
      >> /etc/apt/sources.list
  $ sudo apt-get update 
  $ sudo apt-get install mongodb-10gen

* MongoDB Config
** For local machines with data on /data2:
   dbpath=/data2/mongodb
   shardsvr=true
   port=27001
   etc

* Run many shard servers with:
  sudo -u mongodb mongod -f /etc/mongodb.conf

* Run one or more MongoDB config servers with:
  sudo -u mongodb mongod --configsvr --dbpath=/data2/mongodb-config --logpath=/var/log/mongodb/mongodb-config.log --port 27019

* Run one or more Mongos servers with:
  sudo -u mongodb mongos --configdb 192.168.1.151:27019
   mentioning each config server

* Configure sharding
  - Connect to a mongos and switch to admin db
  db.runCommand({addShard: "192.168.1.151:27001"})
  db.runCommand({addShard: "192.168.1.152:27001"})
  db.runCommand({enableSharding: "crossref"})
  db.runCommand({shardCollection: "crossref.citations", key: {"from.doi": 1}})
  db.runCommand({shardCollection: "crossref.dois", key: {"doi": 1}})
 
  etc...

* Current config
** habanero
   One shard mongod running on 27001
   One mongos router running on 27018
   
   Client connections go to mongos router
** chipotle
   One shard mongod running on 27001
   One mongod config server running on 27019
    
    
* Redis

  $ wget http://redis.googlecode.com/files/redis-2.4.6.tar.gz
  $ tar xzf redis-2.4.6.tar.gz
  $ cd redis-2.4.6
  $ make
  $ sudo make install
  $ cd utils
  $ sudo sh install_server.sh

* Redis Config

** For local machines with SSD on /data:
   dir /data/redis

* Redis Start / Stop

  Use upstart
  $ sudo service redis-server start

* TODO Turn all this into deployment scripts.

* whenever / cron jobs
  
  tobias comes with two sets of cron jobs; harvest_schedule.rb and
  index_schedule.rb.

  harvest_schedule.rb downloads OAI-PMH metadata and loads it into
  mongo, once every two days.

  index_schedule.rb reindexes mongo data in solr. It creates a new
  solr core, indexes, and then switches it for the main core (labs1). 
  Indexing takes place every Sunday.

  Use whenever to install cron jobs:

  $ bundle exec whenever -w -s 'config=fresno' -f config/index_schedule.rb

  $ bundle exec whenever -w -s 'config=local' -f config/harvest_schedule.rb

  Be sure to specify a config so that the cron jobs will be able to
  find service hosts.
